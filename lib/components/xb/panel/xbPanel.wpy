<style lang="less">
.xb-panel {
  background-color: #fff;
  text-align: left;

  &.row-border-no {
    .weui-cell { padding-left: 0; }
    .weui-cells::before { border: none; }
    .weui-cells::after { border: none; }
    .weui-cell::before { border: none; }
    .weui-cell::after { border: none; }
  }
  &.row-border-weui { display: inherit; }
  // &.row-border { display: inherit; }

  // &.border-no { display: inherit; }
  &.border-v { border-top : 1rpx solid #e5e5e5; border-bottom: 1rpx solid #e5e5e5; }

  &.margin-no-top { margin-top: 0; }
  &.margin-top { margin-top: 20rpx; }

  // &.padding-no { display: inherit; }
  &.padding-vh { padding: 20rpx 30rpx; }

  .title {
    padding-bottom: 20rpx;
    font-size: 14px;
    // font-weight: bold;
  }
}
</style>

<template>
  <block wx:if="{{display == 'true'}}">
    <slot name="gtitle"></slot>
    <view class="xb-panel {{getThisClass}} {{getRTClass}}" style="{{getStyle}}">
      <slot name="title"></slot>
      <slot name="head"></slot>
      <slot></slot>
    </view>
  </block>
</template>

<script>
import wepy from 'wepy';
export default class XBPanel extends wepy.component {
  props = {
    display: { type: [String], default: 'true' },
    rowborder: { type: [String], default: 'no' },// no, 'weui'
    border: { type: [String], default: '' },    // '', 'v'
    margin: { type: [String], default: 'top' }, // top, no-top
    padding: { type: [String], default: 'vh' }, // vh, no
    style: { type: [String], default: '' }
  };
  computed = {
    getThisClass() { return this.$name; },
    getUserStyle() { return this.style; },
    getRTClass() {
      const classes = [];
      switch (this.rowborder) {
        case 'no': classes.push('row-border-no'); break;
        case 'weui':
        default: break; // PASS
      }
      switch (this.border) {
        case 'v': classes.push('border-v'); break;
        default: break; // PASS
      }
      switch (this.margin) {
        case 'no-top': classes.push('marginâ€”no-top'); break;
        case 'top':
        default:
          classes.push('margin-top'); break;
      }
      switch (this.padding) {
        case 'no': break;
        default:
          classes.push('padding-vh'); break;
      }
      const out = classes.join(' ');
      return out;
    }
  };
  onLoad() {
    console.log(`${this.$name}-Panel loaded.`);
  }
}

</script>
